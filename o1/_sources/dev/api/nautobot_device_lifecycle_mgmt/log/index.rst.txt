:py:mod:`nautobot_device_lifecycle_mgmt.log`
============================================

.. py:module:: nautobot_device_lifecycle_mgmt.log

.. autoapi-nested-parse::

   Logging utilities for Nautobot Device Lifecycle Mgmt.

   This module contains helpers and wrappers for making logging more consistent across applications.

   How to use me:

       >>> from nautobot_device_lifecycle_mgmt.log import initialize_logging
       >>> log = initialize_logging(level="debug")
       2021-12-07T10:51:49-0700 [DEBUG] [log] [initialize_logging] cookiecutter_project: Logging initialized.
       >>> log.info("NTC")
       2021-12-07T10:51:49-0700 [INFO] [cli] [main] cookiecutter_project.cli: Entrypoint of the CLI app.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   nautobot_device_lifecycle_mgmt.log.initialize_logging



Attributes
~~~~~~~~~~

.. autoapisummary::

   nautobot_device_lifecycle_mgmt.log.APP


.. py:data:: APP
   :annotation: = nautobot_device_lifecycle_mgmt

   

.. py:function:: initialize_logging(config=None, level='INFO', filename=None)

   Initialize logging using sensible defaults.

   Args:
       config (dict): User provided configuration dictionary.
       level (str): The level of logging for STDOUT logging.
       filename (str): Where to output debug logging to file.



