:py:mod:`nautobot_golden_config.tests.test_filters`
===================================================

.. py:module:: nautobot_golden_config.tests.test_filters

.. autoapi-nested-parse::

   Unit tests for nautobot_golden_config models.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   nautobot_golden_config.tests.test_filters.ConfigComplianceModelTestCase
   nautobot_golden_config.tests.test_filters.GoldenConfigModelTestCase
   nautobot_golden_config.tests.test_filters.ConfigRemoveModelTestCase
   nautobot_golden_config.tests.test_filters.ConfigReplaceModelTestCase
   nautobot_golden_config.tests.test_filters.ComplianceRuleModelTestCase
   nautobot_golden_config.tests.test_filters.ComplianceFeatureModelTestCase




.. py:class:: ConfigComplianceModelTestCase(methodName='runTest')

   Bases: :py:obj:`django.test.TestCase`

   Test filtering operations for ConfigCompliance Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Set up base objects.


   .. py:method:: test_id(self)

      Test filtering by ID (primary key).


   .. py:method:: test_full(self)

      Test without filtering to ensure all devices have been added.


   .. py:method:: test_device(self)

      Test filtering by Device.


   .. py:method:: test_search(self)

      Test filtering by Q search value.


   .. py:method:: test_region(self)

      Test filtering by Region.


   .. py:method:: test_site(self)

      Test filtering by Site.


   .. py:method:: test_tenant(self)

      Test filtering by Tenant.


   .. py:method:: test_tenant_group(self)

      Test filtering by Tenant Group.


   .. py:method:: test_rack(self)

      Test filtering by Rack.


   .. py:method:: test_rack_group(self)

      Test filtering by Rack Group.


   .. py:method:: test_role(self)

      Test filtering by Role.


   .. py:method:: test_platform(self)

      Test filtering by Platform.


   .. py:method:: test_manufacturer(self)

      Test filtering by Manufacturer.


   .. py:method:: test_device_type(self)

      Test filtering by Device Type.


   .. py:method:: test_device_status(self)

      Test filtering by Device Status.



.. py:class:: GoldenConfigModelTestCase(methodName='runTest')

   Bases: :py:obj:`ConfigComplianceModelTestCase`

   Test filtering operations for GoldenConfig Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Set up base objects.



.. py:class:: ConfigRemoveModelTestCase(methodName='runTest')

   Bases: :py:obj:`django.test.TestCase`

   Test filtering operations for ConfigRemove Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Setup Object.


   .. py:method:: test_id(self)

      Test filtering by ID (primary key).


   .. py:method:: test_full(self)

      Test without filtering to ensure all have been added.


   .. py:method:: test_name(self)

      Test filtering by Name.


   .. py:method:: test_search(self)

      Test filtering by Q search value.


   .. py:method:: test_platform(self)

      Test filtering by Platform.



.. py:class:: ConfigReplaceModelTestCase(methodName='runTest')

   Bases: :py:obj:`ConfigRemoveModelTestCase`

   Test filtering operations for ConfigReplace Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Setup Object.



.. py:class:: ComplianceRuleModelTestCase(methodName='runTest')

   Bases: :py:obj:`ConfigRemoveModelTestCase`

   Test filtering operations for ComplianceRule Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Setup Object.


   .. py:method:: test_name(self)

      Override since there is no name on this model, but keeping DRY.


   .. py:method:: test_search(self)

      Test filtering by Q search value.



.. py:class:: ComplianceFeatureModelTestCase(methodName='runTest')

   Bases: :py:obj:`django.test.TestCase`

   Test filtering operations for ComplianceFeature Model.

   .. py:attribute:: queryset
      

      

   .. py:attribute:: filterset
      

      

   .. py:method:: setUp(self)

      Setup Object.


   .. py:method:: test_full(self)

      Test without filtering to ensure all have been added.


   .. py:method:: test_id(self)

      Test filtering by ID (primary key).


   .. py:method:: test_name(self)

      Test filtering by Name.


   .. py:method:: test_search(self)

      Test filtering by Q search value.



