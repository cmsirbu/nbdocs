:py:mod:`nautobot_golden_config.datasources`
============================================

.. py:module:: nautobot_golden_config.datasources

.. autoapi-nested-parse::

   Data source plugin extension to register additional git repo types.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   nautobot_golden_config.datasources.refresh_git_jinja
   nautobot_golden_config.datasources.refresh_git_intended
   nautobot_golden_config.datasources.refresh_git_backup
   nautobot_golden_config.datasources.refresh_git_gc_properties
   nautobot_golden_config.datasources.get_id_kwargs
   nautobot_golden_config.datasources.update_git_gc_properties



Attributes
~~~~~~~~~~

.. autoapisummary::

   nautobot_golden_config.datasources.datasource_contents


.. py:function:: refresh_git_jinja(repository_record, job_result, delete=False)

   Callback for gitrepository updates on Jinja Template repo.


.. py:function:: refresh_git_intended(repository_record, job_result, delete=False)

   Callback for gitrepository updates on Intended Config repo.


.. py:function:: refresh_git_backup(repository_record, job_result, delete=False)

   Callback for gitrepository updates on Git Backup repo.


.. py:function:: refresh_git_gc_properties(repository_record, job_result, delete=False)

   Callback for gitrepository updates on Git Configuration repo.

   Expected folder structure:
   ├── golden_config
   │   ├── compliance_features
   │   ├── compliance_rules
   │   ├── config_removes
   │   ├── config_replaces



.. py:exception:: MissingReference

   Bases: :py:obj:`Exception`

   Custom error to signal a missing FK reference when looking up.


.. py:function:: get_id_kwargs(gc_config_item_dict, id_keys, job_result)

   Method to get the proper id kwargs and remove them from gc_config_item_dict.


.. py:function:: update_git_gc_properties(golden_config_path, job_result, gc_config_item)

   Refresh any compliance features provided by this Git repository.


.. py:data:: datasource_contents
   :annotation: = []

   

